
return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x)local x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=112,35,53,77,72,93,31,87,50,53,95,75,67,80,67,25,38,55,86,12,76,75,77,51,47,32,23,10,29,27,76,95,94,46,34,73,93,18,55,94,60,44,27,31,42,55,70,14,92,42,85,36,23 while x~=80 do if y>=673 then if y<=999 then if y>=861 then if y>=941 then if y<=941 then cl=1 y=965 else if y<996 then y=999 bz=function()local cm,cn,co,cp cp,cm,cn,co=bx(z,cl,(cl+3))cl=(cl+4);return((co*16777216)+(cn*65536)+(cm*256)+cp);end else y=1035 ch=function()local cm cm=bx(z,cl,cl)cl=(cl+1);return cm;end end end else if y>=907 then if y<918 then bu=(bit_lib and bit_lib.bxor or function(cm,cn)cm=cm%(2^k)cn=cn%(2^32)local k,co=0,1 while cm>0 and cn>0 do local cp,cq=cm%16,cn%16 k=k+bd[cp+1][cq+1]*co cm=(cm-cp)/16 cn=(cn-cq)/16 co=co*16 end k=k+cm*co+cn*co return k end)y=925 else y=941 bj=function(k,cm,cn,co,co)local co co=((k/2^(cm-1))%2^((cn-1)-(cm-1)+1))do return(co-co%1);end end end else ca=function(k,cm,cn,co)local co,cp,cq=80,54,90,72,58,18,59,57,76,73,42,21,62 while co~=39 do if cp>=122 then if cp>=143 then if cp<163 then cp=168 return cq else break end else do cq=(cq-cq%1)end cp=143 end else if cp<=54 then cp=75 cq=nil else if cp>83 then cp=122 cq=((cm/bi[k])%bi[cn])else cp=90 cq=nil end end end end end y=907 end end else if y<=722 then if y<717 then do bt=''end y=722 else y=754 bl=(2^52)end else if y<=754 then y=781 bi={[0]=1}else if y>785 then for k=1,p do bi[k]=cd cd=(cd*2)end y=861 else y=828 cd=2 end end end end else if y>=1194 then if y>=1313 then if y>=1346 then if y>1354 then x=80;else y=1387 return bq(be(cf()),{},cf())();end else y=1346 bq=function(k,p,x,cm,cm,cm)local cm,cn,co,cp,cq cp=k[31]do cn=cg end cm=k[25]co=k[50]do cq=k[131]end return function(...)local k,cn,cr,cs,ct,cu,cv,cw,cx cs=1 cn=-1 cw=-1 cv={}cx={...}cr=(ba('#',...)-1)cu={}k={}for cw=0,cr do if(not(cw<co))then cv[(cw-co)]=cx[(cw+1)];else k[cw]=cx[(cw+1)];end;end;ct=(cr-co+1)while true do local co,cr,ct,cv,cw,cx,cy,cz,da,db db=cq[cs]cv=db[137]cz=db[60]cr=db[55]do cw=db[132]end do cy=db[17]end co=db[99]do cx=db[23]end do da=db[175]end ct=db[94]if not(cv<26)then if not(cv<39)then if not(cv<45)then if not(cv<48)then if not(cv>49)then if(db[137]>48)then local co,cq,ct cq=cr ct=k[cq]co=da do for cw=1,co do ct[cw]=k[(cq+cw)]end;end else local co,cq,ct co=db[55]cq={k[co](k[co+1])}ct=0 for cw=co,cy do ct=(ct+1);k[cw]=cq[ct];end end else if(cv<51)then do if(not(k[cr]==k[cy]))then cs=da;end;end else local co co=cr k[co]=k[co]();end end else if not(db[137]>45)then local co do co=cr end k[co]=k[co](bv(k,co+1,cn));else do if(db[137]>w)then k[db[55]]={};else k[cr]();end end end end else do if not(cv<42)then if not(cv>42)then local w w=cr k[w](k[(w+1)])else if(cv>43)then local w w=cr do do return k[w](bv(k,(w+1),cn))end end;else do return k[cr]end end end else do if not(cv>39)then local w,co co=cr w={}for cq=1,#cu do local ct ct=cu[cq]for cq=0,#ct do local cw,cx,cz cz=ct[cq]cx=cz[1]cw=cz[2]if(cx==k and cw>=co)then w[cw]=cx[cw];do cz[c]=w;end end;end;end;else if(db[137]<41)then if((k[cr]<k[db[17]]))then cs=da;end;else local c c={}do if(#cu>0)then for w=1,#cu do local co co=cu[w]for w=0,#co do local cq,ct,cw cw=co[w]ct=cw[1]cq=cw[2]if(ct==k and cq>=0)then c[cq]=ct[cq]cw[i]=c end end end end end return 1,db[cy],k[cr];end end end end end end else if not(cv<32)then if not(cv<35)then if not(db[137]<37)then if(cv>37)then do k[cr]=k[da];end else p[da]=k[cr];end else if(cv>35)then k[cr]=x[cm[db[175]]];else do k[cr]=cm[da]end end end else if not(db[137]>32)then k[cr][k[da]]=k[cy];else if not(cv~=33)then local c,i,w c=cr i=k[(c+2)]do w=(k[c]+i)end k[c]=w;if((i>0))then do if(not(w>k[c+1]))then do cs=da;end k[(c+3)]=w;end end elseif(not(w<k[c+1]))then cs=da;k[(c+3)]=w;end else if(cm[cy]~=k[cr])then cs=da;end;end end end else if not(cv>28)then if not(cv>26)then local c c=cr k[c](bv(k,(c+1),da))else if 27==cv then k[db[55]]=(k[da]%cm[cy]);else local c c=db[55]k[c](bv(k,(c+1),cn))end end else do if not(cv>29)then local c,i,w,co c=cr co,w=bm(k[c](bv(k,(c+1),da)))cn=(w+c-1)i=0 for w=c,cn do do i=(i+1);end k[w]=co[i];end;else do if(cv<31)then local c,i i=cr c=k[da]k[(i+1)]=c;k[i]=c[cm[cy]];else local c,i,w,co,cq i=db[55]co=cy c=(i+2)w={k[i](k[i+1],k[c])}for ct=1,co do do k[(c+ct)]=w[ct]end end cq=k[(i+3)]if cq then k[c]=cq else cs=db[175];end;end end end end end end end else if not(cv>12)then if not(db[137]<6)then if not(cv>8)then if not(cv<7)then do if 7==cv then if not k[cr]then cs=da;end;elseif((cm[cr]<k[cy]))then cs=da;end end else cm=cg[cr](cm)end else if not(cv<11)then do if(cv<12)then do k[cr][cm[da]]=cm[cy];end else do k[cr]=(k[da]-k[cy]);end end end else if(cv<10)then local c,i c=da i=k[c]for w=(c+g),cy do i=(i..k[w]);end;k[cr]=i;else k[db[55]]=(k[da]+k[cy]);end end end else if not(cv<3)then if not(db[137]<4)then if(cv>4)then local c,g,i c=db[55]g=k[c]i=k[(c+2)]if((i>0))then if((g>k[c+1]))then cs=da;else k[(c+3)]=g;end elseif((g<k[c+1]))then cs=da;else do k[(c+3)]=g;end end else local c,g c=cr g={}do if(#cu>0)then for i=1,#cu do local w w=cu[i]do for i=0,#w do local co,cq,ct cq=w[i]co=cq[1]do ct=cq[2]end do if(co==k and ct>=0)then g[ct]=co[ct]cq[1]=g end end end end end end end return bv(k,c,cn);end else do k[cr]=#k[da];end end else if not(cv>0)then k[cr]=(k[da]+cm[cy]);else if(cv<2)then local c c=cr k[c]=k[c](bv(k,c+1,da));else k[cr]=(not(db[l]==0));end end end end else if not(cv>18)then if not(db[137]<16)then if not(cv>16)then k[cr]=k[db[175]][k[db[17]]];else if(cv>17)then k[db[55]]=nil;else local c,g,i i=cp[da]g=nil c={}g=cj({},{__index=function(l,l)local l=c[l];return l[1][l[2]];end,__newindex=function(l,l,w)local l=c[l]l[1][l[2]]=w;end;});for l=1,cy do local w w=db[146][l]if w[1]then c[(l-1)]={k,w[2],nil,nil};else c[(l-1)]={p,w[2],nil,nil};end;cu[(#cu+1)]=c;end;k[cr]=bq(i,g,x);end end else if not(cv<14)then do if(cv<15)then if k[cr]then cs=da;end;else k[cr]=(k[db[175]]/cm[cy]);end end else do cs=da;end end end else if not(cv>21)then if not(cv<20)then if(cv<21)then local c c=cr k[c]=k[c](k[c+1]);else k[cr][cm[db[175]]]=k[cy];end else k[cr]=p[da];end else if not(cv>23)then if(cv<23)then k[cr]=bq(cp[da],n,x);else k[cr]=k[db[175]][cm[cy]];end else if(cv>24)then k[cr]=(k[da]*cm[cy]);else local c,g,i,l l=cr c,i=bm(k[l](k[(l+1)]))do cn=(i+l-1)end g=0 do for i=l,cn do g=(g+1);k[i]=c[g];end;end end end end end end end cs=(cs+1);end;end;end end else if y<=1194 then be=function(c,g,g)local g,i,k,l,n,p,w,x=81,78,83,94,65,86,44,19,92,68,55,59,51,24,83,24,15,45,56,75,82,11,99,66 while g~=44 do if i<=271 then if i>=174 then if i<=205 then if i>178 then i=225 for cm=(#bp+1),(#bp+x)do local cn,co,cp,cq,cr=96,38,28,12,70,14,82,63,93,67,64,97,21,27,88,80,14,60,92,23,60,50,34 while cn~=52 do if co<=288 then if co>=183 then if co<=232 then if co<227 then cp=bz()co=232 else cr[99]=ch();co=264 end else if co>266 then co=309 do cr[137]=bj(cp,1,11);end else co=288 cr[37]=bj(cq,1,2);end end else if co<=69 then if co>44 then do cr={}end co=111 else cp,cq,cr=nil co=69 end else if co>114 then co=183 cq=bz()else co=157 do cr[60]=ch();end end end end else if co>=419 then if co<=434 then if co<425 then cr[23]=-cr[55]co=434 else cr[94]=-cr[17]co=451 end else if co>455 then cn=52;else co=466 bp[cm]=cr;end end else if co>=355 then if co<385 then co=391 cr[17]=bj(cq,21,d);else co=419 cr[175]=bj(cp,12,33);end else if co<325 then cr[55]=bj(cq,3,11);co=328 else cr[132]=bj(cq,12,20);co=355 end end end end end end else do x=bz()end i=205 end else if i>227 then i=304 p[131]=w;else i=271 for d=1,bz()do local cm,cn,co,cp,cq,cr=81,44,35,92,29,82,14,27,34,19,99,40,32,61,66,89,33,75,43,17,16,66,89,57,92 while cm~=37 do if cn<=277 then if cn<=103 then if cn>=83 then if cn>86 then do cp[146]={};end cn=126 else cp[60]=ch();cn=103 end else if cn>50 then do cp={{},nil,nil}end cn=83 else co,cp,cq,cr=nil cn=64 end end else if cn<=169 then if cn>129 then co=bz()cn=199 else if 1==ch()then for cs=1,ch()do cp[146][cs]={ch()==0,bz()}end end cn=169 end else if cn>=242 then if cn>249 then cn=294 cp[37]=cq else cq=bj(co,1,2)cn=277 end else cr=bz()cn=242 end end end else if cn<=403 then if cn>=361 then if cn>369 then cn=445 cp[17]=bj(co,21,29);else cp[175]=bj(cr,12,33);cn=403 end else if cn<309 then cp[137]=bj(cr,1,11);cn=313 else cn=361 cp[55]=bj(co,3,11);end end else if cn<=461 then if cn>451 then cn=503 cp[23]=-cp[55]else cn=461 do cp[99]=bj(co,12,20);end end else if cn<=503 then cn=550 cp[94]=-cp[17]else if cn<561 then cn=569 do w[d]=cp;end else cm=37;end end end end end end end end end else if i>=125 then if i<154 then l={}i=157 else p={}i=174 end else if i>83 then i=125 w={}else k,l,n,p,w,x=nil i=103 end end end else if i>=428 then if i>=480 then if i<=480 then p[u]=n i=525 else if i<548 then i=556 do return p;end else g=44;end end else if i>436 then for d=1,k do local g,u,w,x=66,36,25,73,12,93,26,34,28,76,14,28,14,25,52 while g~=29 do if u>=133 then if u>=167 then if u<182 then u=184 n[d]=x;else break end else u=167 if(not(w~=2))then do x=(not(ch()==0));end elseif(0==w)then do x=bk();end elseif(4==w)then x=bf();elseif(not(w~=1))then do x=c[bf()];end end;end else if u>=71 then if u>75 then u=133 do x=nil end else u=115 do w=ch()end end else w,x=nil u=71 end end end end i=480 else do n={}end i=461 end end else if i>=379 then if i<402 then p[31]=l;i=405 else i=428 k=bz()end else if i>313 then do for c=1,bz()do l[c-1]=be();end end i=379 else p[50]=ch();i=335 end end end end end end y=1225 else if y>1228 then bg={}y=1313 else y=1265 cg={}end end end else if y<=1077 then if y<1070 then y=1077 ce=function()local c,d d,c=bx(z,cl,(cl+2))do cl=(cl+2);end return((c*256)+d);end else y=1123 do bk=function()local c,d,g,i,k,l,n,p=81,57,89,96,94,14,32,17,68,98,13,31,94,63,39,99,98,49,81 while c~=37 do if d>=204 then if d<=280 then if d<=204 then i=ca(20,k,11)d=242 else if d>244 then g=1 d=327 else p=(ca(0,k,20)*4294967296+n)d=280 end end else if d>=370 then if d>379 then c=37;else d=392 return(l*(v^(i-1023))*(p/bl+g))end else d=370 do if not(i~=0)then do if 0~=p then i=1 g=0 else return(l*0)end end elseif 2047~=i then else if 0==p then do return(l*(0/0))end else return(l*(1/0))end end end end end else if d<=72 then if d>60 then n=bz()d=117 else d=72 g,i,k,l,n,p=nil end else if d>=132 then if d<167 then d=173 while(n==0 and k==0)do return 0 end else d=204 do l=((-1)^ca(31,k,a))end end else d=132 k=bz()end end end end end end end else if y>=1145 then if y>1153 then bp={}y=1194 else bm=function(...)return{...},ba('#',...)end y=1160 end else y=1145 bf=function(a,a,a,a)local a,c,d,g=63,58,71,10,82,72,78,71,19,92,76,76,79 while a~=33 do if c>=143 then if c<=143 then c=173 cl=(cl+g);else if c>177 then break else c=190 return d;end end else if c>=84 then if c<105 then g=bz()c=113 else d=z:sub(cl,(cl+g-1))c=143 end else c=84 d,g=nil end end end end end end end end else if y<=298 then if y>=169 then if y<=221 then if y>=205 then if y>209 then y=256 bw=table.insert else do bs=table.concat end y=221 end else do ci=string.rep end y=205 end else if y<=256 then ck=math.ldexp y=275 else if y<295 then y=298 cf=(getfenv or function()return _ENV end)else cj=setmetatable y=323 end end end else if y<=65 then if y>44 then bx=string.byte y=85 else z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=nil y=65 end else if y>=111 then if y>117 then y=169 do bn=string.gsub end else bc=string.sub y=132 end else cb=string.char y=111 end end end else if y>=462 then if y>=564 then if y>=583 then if y<625 then z=bnfunction(a,c,c,c,c)return br[bo(a,16)]end)y=632 else bd={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,r,8,11,10,13,12,15,14,},{2,3,0,j,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,s,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,q,5,2,3,0,1,14,15,12,13,10,11,8,e,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,t,14,15,0,1,o,3,4,5,6,7,},{9,8,11,10,13,12,h,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,m,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,b,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,f,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}y=673 end else for a=0,255 do br[a]=cb(a);end y=583 end else if y<=462 then bv=(unpack or table.unpack)y=487 else if y>496 then y=564 br={}else bo=tonumber y=533 end end end else if y>=379 then if y>=395 then if y<425 then do bb=math.abs end y=427 else by=math.floor y=462 end else bh=(function(a,b)if'number'==cc(a)then return true else return false end end)y=395 end else if y>329 then y=379 cc=type else y=357 do ba=select end end end end end end end end)(1,14,1,29,9,10,1,15,1,1,32,175,7,nil,2,31,4,9,9,13,25,2,46)
